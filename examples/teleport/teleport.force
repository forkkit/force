// Process defines a set of actions triggered by a channel
Process(Spec{
	// Name is used for reporting and debugging purposes
	Name: "teleport-ci",
	// Watch pull requests
	Watch: PullRequests(Source{
		// Repo is a repository to watch
		Repo: "gravitational/teleport",
	}),
	// No namespaces is a problem - how to define modules?
	// can I just do github.PostStatusOf?
	// also, should be more strict with variables, reference of an undefined
	// variable or shadowing of an existing one should be a problem
	Run: PostStatusOf(
		// create temporary directory "repo",
		WithTempDir("repo", 
			// Clone clones git repository into temp dir
			Clone(Repo{
				URL: "https://github.com/gravitational/teleport.git",
				Into: Var("repo"),
				// Commit is a commit variable defined by pull request watch,
				// the problem is that there is no namespacing here
				Hash: Var("commit"),
				// Submodules is an optional submodule to init
				Submodules: Strings("e"),
			}),
			// image is a test image to build
			Define("image", Sprintf(`gcr.io/kubeadm-167321/teleport-tests:%v`, Var("commit"))),
			// buildbox is a version of the buildbox
			Define("buildbox", "gcr.io/kubeadm-167321/buildbox:1.12.1"),
			// Build builds dockerfile and tags it in the local storage
			Build(Image{
				// Set build context to the cloned repository
				Context: Var("repo"),
				// Dockerfile is a dockerfile to build (from current dir),
				Dockerfile: "./test.dockerfile",
				// Tag is the tag to build - here, as you see, we need to reimplement
				// Sprintf and every other method that works with our vars
				Tag: Var("image"),
				// Args are build arguments
				Args: []Arg{
					{
						Key: "BUILDBOX",
						Val: Var("buildbox"),
					},
				},
			}),
			Push(Image{Tag: Var("image")}),
		),
	),
})
