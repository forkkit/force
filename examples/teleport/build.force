func RunBuildJob(script, setup string){
	Run(Job{
		Name: Sprintf("tele-build-%v", ID()),
		Volumes: []Volume{
			{Name: "creds", Secret: &SecretSource{Name: "creds"}},
			{Name: "gitkey", Secret: &SecretSource{Name: "gitkey"}},						
			{Name: "scripts", ConfigMap: &ConfigMapSource{Name: "scripts"}},
			{Name: "cache", EmptyDir: &EmptyDirSource{}},
			{Name: "tmp", EmptyDir: &EmptyDirSource{}},
		},
		Containers: []Container{
			{
				Name: "kbuild",					
				Image: "gcr.io/kubeadm-167321/force:0.0.1-7",
				Command: Strings("force", "-d"),					
				Env: []EnvVar{
					// ID is passed so the job spawned in k8s
					// will have the same job id, having the same logs
					{Name: "FORCE_ID",Value: ID()},
					// Script is passed as an environment variable,
					// thanks to Marshal the script is inline,
					// can reference outside variables
					{
						Name: "FORCE_SCRIPT",
						Value: script,
					},
					// Setup is passed as an environment variable
					{
						Name: "FORCE_SETUP",
						Value: setup,
					},
					{Name: "GOOGLE_CREDENTIALS", Value: "/var/secrets/google/force-creds.json"},
					{Name: "GIT_PRIVATE_KEY_FILE", Value: "/var/secrets/git/github.key"},
					{Name: "GIT_KNOWN_HOSTS_FILE", Value: "/var/secrets/git/known_hosts"},
				},
				VolumeMounts: []VolumeMount{
					// tmp is for temporary directory, just in case
					{Name: "tmp", MountPath: "/tmp"},
					// cache is for container build cache
					{Name: "cache", MountPath: "/root/.local"},
					// creds is for google creds
					{Name: "creds", MountPath: "/var/secrets/google"},
					// scripts is a script with a dockerfile
					{Name: "gitkey", MountPath: "/var/secrets/git"},
					// scripts is a script with a dockerfile
					{Name: "scripts", MountPath: "/mnt/scripts"},								
				},
				SecurityContext: &SecurityContext{Privileged: true},
			},
		},
	}),
}
