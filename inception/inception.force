// Process defines a set of actions triggered by a channel
Process(Spec{
	// Name is used for reporting and debugging purposes
	Name: "inception",
	// Watch pull requests
	Watch: Oneshot(),
	// No namespaces is a problem - how to define modules?
	// can I just do github.PostStatusOf?
	// also, should be more strict with variables, reference of an undefined
	// variable or shadowing of an existing one should be a problem
	Run: Sequence(
		// Capture version
		Define("ver", TrimSpace(Shell(Script{Args: Strings("./version.sh")}))),
		// Image is an image name to build
		Define("image", Sprintf(`gcr.io/kubeadm-167321/force:%v`, Var("ver"))),
		// Go version to use for builds
		Define("go_ver", "1.12.8"),
		// Runc version to include
		Define("runc_ver", "1.0.0-rc8"),
		Infof("Going to build %v with go runtime %v, runc %v", Var("image"), Var("go_ver"), Var("runc_ver")),
		// Build builds dockerfile and tags it in the local storage
		Build(Image{
			Dockerfile: "./Dockerfile",
			Context: "../",
			// Tag is the tag to build - here, as you see, we need to reimplement
			// Sprintf and every other method that works with our vars
			Tag: Var("image"),
			// Args are build arguments
			Args: []Arg{
				{Key: "GO_VER", Val: Var("go_ver")},
				{Key: "RUNC_VER", Val: Var("runc_ver")},
			},
		}),
		// Push the built image
		Push(Image{Tag: Var("image")}),
		// Prune the build cache
		Prune(),
		Exit(),
	),
})
